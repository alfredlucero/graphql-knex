### This file was generated by Nexus Schema
### Do not make changes to this file directly


type PageInfo {
  afterKey: String
  beforeKey: String
}

type ParentAccount {
  createdAt: String
  package: String!
  status: String!
  userId: Int!
  username: String!
}

type ParentAccountMinimal {
  createdAt: String
  userId: Int!
  username: String!
}

"""Parent account search result with data and pageInfo"""
type ParentAccountsSearch {
  result: ParentAccountsSearchResult!
}

"""Parent account search row data such as userId, username, status, etc."""
type ParentAccountsSearchData {
  createdAt: String
  package: String!
  status: UserStatus!
  userId: Int!
  username: String!
}

"""Parent account search input i.e by userId, email, username, pagination"""
input ParentAccountsSearchInput {
  afterKey: String
  beforeKey: String
  email: String
  limit: Int
  userId: Int
  username: String
}

"""
Parent account search result data i.e. list of matched parent accounts and page info
"""
type ParentAccountsSearchResult {
  data: [ParentAccountsSearchData!]!
  pageInfo: PageInfo!
}

type Query {
  """Get parent accounts based on search input"""
  getParentAccounts(searchInput: ParentAccountsSearchInput): ParentAccountsSearch!

  """Get subusers based on search input"""
  getSubusers(searchInput: SubusersSearchInput): SubusersSearch!

  """Get teammates based on search input"""
  getTeammates(searchInput: TeammatesSearchInput): TeammatesSearch!
  parentAccounts(email: String, userId: Int, username: String): [ParentAccount!]!
  parentAccountsMinimal: [ParentAccountMinimal!]!
}

"""Subuser search result with data and pageInfo"""
type SubusersSearch {
  result: SubusersSearchResult!
}

"""
Subuser search row data such as userId, username, parentUserId, status, etc.
"""
type SubusersSearchData {
  createdAt: String
  parentUserId: Int!
  parentUsername: String!
  status: UserStatus!
  userId: Int!
  username: String!
}

"""
Subuser search input i.e by userId, parentUserId, email, username, pagination
"""
input SubusersSearchInput {
  afterKey: String
  beforeKey: String
  email: String
  limit: Int
  parentUserId: Int
  userId: Int
  username: String
}

"""Subuser search result data i.e. list of matched subusers and page info"""
type SubusersSearchResult {
  data: [SubusersSearchData!]!
  pageInfo: PageInfo!
}

"""Teammate search result with data and pageInfo"""
type TeammatesSearch {
  result: TeammatesSearchResult!
}

"""
Teammate search row data such as parentUserId, parentUsername, username, etc.
"""
type TeammatesSearchData {
  createdAt: String
  parentUserId: Int!
  parentUsername: String!
  username: String!
}

"""Teammate search input i.e by parentUserId, username, email, pagination"""
input TeammatesSearchInput {
  afterKey: String
  beforeKey: String
  email: String
  limit: Int
  parentUserId: Int
  userId: Int
  username: String
}

"""
Teammate search result data i.e. list of matched teammates and page info
"""
type TeammatesSearchResult {
  data: [TeammatesSearchData!]!
  pageInfo: PageInfo!
}

"""User status types such as Active, Billing Frozen, etc."""
enum UserStatus {
  Active
  BillingFrozen
  BillingTerminated
  BillingWarned
  ComplianceBanned
  ComplianceDeactivated
  ComplianceSuspended
  ComplianceWarned
  NA
  ProfileUpdated
  ProvisionFail
  ProvisionNeeded
  ProvisionPending
  ProvisionPermfail
  UpgradeReview
}